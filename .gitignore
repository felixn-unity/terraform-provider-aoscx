# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Go workspace file
go.work

# Dependency directories (remove the comment below to include it)
# vendor/

# Go build cache
.cache/

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Terraform files
*.tfstate
*.tfstate.*
*.tfvars
*.tfvars.json
.terraform/
.terraform.lock.hcl
terraform.tfstate.backup
crash.log
crash.*.log

# Terraform provider binary
terraform-provider-*

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Exclude all .tfvars files, which are likely to contain sentitive data
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
*tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Log files
*.log

# Test files and directories
test/
tests/
testing/

# Build artifacts
dist/
build/

# Temporary files
tmp/
temp/

# Personal notes file
notes

# Local development files
.env
.env.local
.env.*.local

# Documentation build artifacts
docs/_build/

# Coverage reports
coverage.out
coverage.html

# Profiling data
*.prof

# Debug files
debug

# Local testing configurations
test.tf
test*.tf
example.tf
example*.tf

# Git patches
*.patch

# Backup files
*.bak
*.backup 